@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Contact management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
   
}
@model post_office.Models.ContactModel
<div class="col-12" style="display: table; background: white; top: 20px;box-shadow: rgb(248 242 225 / 0.92) 10px 10px 20px 5px; padding:20px">
    <div style="height:50px;position:relative; padding:0">
        <input class="input-search form-control" style="float:left;width:310px;" type="text" placeholder="Search by sender name, email, phone" id="search-by-name" />
        <label class="text-color ml-2 mr-2" style="float: left; font-size: 14px">From:</label>

        <input type="date"  id="search-by-datefrom" class="input-form-cu" style="width:135px;float:left" value="@ViewBag.from" />
        <label class="text-color ml-2 mr-2" style="float: left; font-size: 14px">To:</label>
        <input type="date"   id="search-by-dateto" class="input-form-cu" style="width:135px;float:left" value="@ViewBag.to" />
        <input type="checkbox" id="search-by-read" class="ml-5"/><label class="text-color">Read</label>
        <input type="checkbox"  id="search-by-reply" class="ml-2"/><label class="text-color">Replied</label>
        <button class="btn-action edit pl-3 pr-3 ml-2" onclick="ClearFilter()"><i class="fa fa-repeat" style="font-size:18px"></i></button>


    </div>
    <table class="table " style=" border:2px solid #ddd;width:inherit" id="table-id">

        <tr style="color: white; background: #747583">
            <th><input type="checkbox" id="check-all" onclick="SelectAll(this)" /></th>
            <th>#</th>
            <th>Sender name</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Subject</th>
            <th>Message</th>
            <th>Read</th>
            <th>Replied</th>
            <th>Created at</th>
            <th>Action</th>
        </tr>
        @{int k = 1;}
        @foreach (var item in (List<post_office.Models.ContactModel>)ViewBag.lsContact)
        {
    <tr class="table-item ">
        <td><input type="checkbox" class="sub-check" post-item="post-@item.id" /></td>
        <td class="tbl-50">@k @{k++;} </td>
        <td class="tbl-140">@item.name</td>
        <td class="tbl-140">@item.email</td>
        <td class="tbl-140">@item.phone</td>
        <td class="tbl-150">@item.subject</td>
        <td class="tbl-200">@item.message</td>
        <td>
            @if (item.isRead)
            {<i class="fa fa-check-circle" style="color:#16e42c; font-size:20px;"></i> }
            else
            { <i class="fa fa-check-circle" style="color:#d6d2d2; font-size:20px;"></i>}
        </td>
        <td>
            @if ((bool)item.isReply)
            {<i class="fa fa-check-circle" style="color:#16e42c; font-size:20px;"></i> }
            else
            { <i class="fa fa-check-circle" style="color:#d6d2d2; font-size:20px;"></i>}
        </td>
        <td>@item.createdAt.ToString("dd/MM/yyyy HH:mm")</td>
        @*<i class="fas fa-check-square"></i>*@
        <td>
            <span oid="object-@item.id" class="action-icon purple read-contact" style="padding:10px 5px 10px 10px">
                <i class="fa fa-eye"></i>
            </span>
            <span oid="object-@item.id" class="action-icon edit reply-contact">
                <i class="fa fa-edit"></i>
            </span>
        </td>
    </tr>

        }

    </table>
    <div class="pagination-container" style="cursor:pointer">
        <nav aria-label="Page navigation example" style="position:unset;box-shadow:none; background:none;padding:0">
            <ul class="pagination" id="paginations">
                <li class="page-item page-link" data-page="prev">&lt;</li>
                @for (int i = 1; i <= ViewBag.pagi; i++)
                {
                    if (i == 1)
                    {
                        <li class="page-item page-link" data-page="page-1" style="background:#ddd">@i</li>

                    }
                    else
                    {
                        <li class="page-item page-link" data-page="page-@i">@i</li>
                    }
                }
                <li class="page-item page-link" data-page="next">&gt;</li>
            </ul>
        </nav>
    </div>
</div>
<div id="view-main">
    <div id="view-sub" class="col-11">
        <div class="col-12" id="view-title">
            <label> </label>
            <span style="float:right; cursor:pointer" id="CloseForm">
                <i class="fa fa-window-close" style="pointer-events:none;font-size:38px"></i>
            </span>
        </div>
        <div id="content">
          @*  @using (Html.BeginForm("RoleCU", "Role", FormMethod.Post, new { @id = "form-role" }))
            {
                <div class="col-12" style="padding:20px;min-height:450px;display:table">
                    <div class="col-6" style="border-right:3px solid #f4e8e4;min-height:inherit">
                        @Html.AntiForgeryToken()
                        <label class="text-color">Code:</label>
                        @Html.TextBoxFor(d => d.code, new { @class = "input-form-cu", @type = "text", @placeholder = "code", @id = "role-code" })
                        @Html.ValidationMessageFor(d => d.code, "", new { @class = "_error" })
                        <br />
                        <label class="text-color">Name:</label>
                        @Html.TextBoxFor(d => d.name, new { @class = "input-form-cu", @type = "text", @placeholder = "name", @id = "role-name" })
                        @Html.ValidationMessageFor(d => d.name, "", new { @class = "_error" })
                        <br />

                    </div> <div class="col-6"></div>
                </div>
                <div class="col-12" style=" min-height: 70px; border-radius: 0 0 5px 5px; text-align:center">
                    <button id="btnRoleSave" type="submit" class="save btn-action pl-4 pr-4 pt-2 pb-2">Save</button>
                    <a id="btnRoleCancel" onclick="ResetForm()" class="cancel btn-action ml-1" style="cursor:pointer; padding:12px 25px">Cancel</a>
                </div>
            }*@
        </div>

    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<script type="text/javascript">
    function ClearFilter() {
        $("#search-by-name").val("");
        SearchFilter(1);
    }
    window.onload = function () {
         var mess = "@(post_office.Controllers.Administrator.RoleController.mess)";
        if (mess == "Saved successfully!" || mess == "Deleted successfully!")
            ShowMessage(true, mess)
        else if (mess != "Saved successfully!" && mess != "")
            ShowMessage(false, mess)
           @{post_office.Controllers.Administrator.RoleController.mess = "";}

    }
    $("#btnCreate").click(function () {
        OpenForm("Create role",0);
    });
    $(".edit-role").click(function () {
        roleID = parseInt($(this).attr("oid").replace("object-", ""));
        OpenForm("Update role",roleID)
    });

    function ResetFormCreate() {
        $("#create-role-permission").css("display", "none");
        ClearTable();
        @{post_office.Controllers.Administrator.RoleController.roleId = 0; }

    }

    function OpenForm(type, id) {

        if (id != 0) {
            var fdt = new FormData();
            fdt.append("id", id);
             $.ajax({
                type: "POST",
                url: "@Url.Action("GetRole", "Role")",
                data: fdt,
                processData: false,
                contentType: false,
                 success: function (data) {
                     $("#role-code").val(data.code);
                     $("#role-name").val(data.name);
                }
            });
        }

        $("#view-main").css("display", "block");
        document.getElementById("view-title").children[0].innerHTML = type;

    }

    $("#CloseForm").click(function () {
        ResetForm();
    });

    function ResetForm() {
        CloseForm();
        @{post_office.Controllers.Administrator.RoleController.roleId = 0; }
            er = document.getElementsByClassName("_error");
            for (var i = 0; i < er.length; i++) {
            $(er).html("");
            }
        $("#form-role").trigger("reset");

    }
   $('body').delegate('.page-item', 'click', function () {

        var str = $(this).attr("data-page");

        var re = document.getElementsByClassName('page-item');
        for (var i = 0; i < re.length; i++) {
            $(re[i]).css("background", "#fafafa");
        }

        if (str == "prev"&&pages>=1) {

              if (pages ==1) {
                pages = 1;

            } else {
                pages -= 1;

            }

        } else if (str == "next" && pages <=@ViewBag.pagi) {
            if (pages ==@ViewBag.pagi) {
                pages = @ViewBag.pagi;

            } else {
                pages += 1;

            }


        } else {
            if (pages == parseInt(str.replace("page-", ""))) {
                pages = -1;
            } else {
                pages = parseInt(str.replace("page-", ""));
            }
            $(this).css("background", "#ddd");
        }
         SearchFilter(pages);


    });
    function LoadDataContact( page,  cond,datefrom,dateto,read,reply) {

        if (page > 0 && page <=@ViewBag.pagi) {
            document.getElementById("check-all").checked = false;

            var r = document.getElementsByClassName('table-item');
            while (r.length > 0) {
                r[0].parentNode.removeChild(r[0]);
            }
            var formDT = new FormData();
            formDT.append("p", page);
            formDT.append("cond", cond);
            formDT.append("dateFrom", datefrom);
            formDT.append("dateTo", dateto);
            formDT.append("read", read);
            formDT.append("reply", reply);
            var row = page == 1 ? 1 : 10 * (page - 1) + 1;
            $.ajax({
                type: "POST",
                url: "@Url.Action("LoadDataContact", "Contacts")",
                data: formDT,
                processData: false,
                contentType: false,
                success: function (data) {
                    var read = "";
                    var reply = "";
                    for (var i = 0; i < data.length; i++) {
                            if ("@post_office.Models.AuthenticetionModel.hasPermission("READ_CONTACT")"=="True") read = '<span oid="object-' + data[i].id + '" class="action-icon edit edit-attr" > <i class="fa fa-edit"></i></span>';
                            if ("@post_office.Models.AuthenticetionModel.hasPermission("REPLY_CONTACT")"=="True") rep = '<span oid="object-' + data[i].id + '" class="action-icon delete delete-attr">  <i class="fa fa-trash"></i> </span>';

                            var str1 = '<i class="fa fa-check-circle" style="color:#16e42c; font-size:20px;"></i>';
                        if (data[i].isRead != true) { str1 = '<i class="fa fa-check-circle" style="color:#d6d2d2; font-size:20px;"></i>'; }
                        var str2 = '<i class="fa fa-check-circle" style="color:#16e42c; font-size:20px;"></i>';
                        if (data[i].isReplied != true) { str2 = '<i class="fa fa-check-circle" style="color:#d6d2d2; font-size:20px;"></i>'; }
                            var value = ' <tr class="table-item "> <td><input type="checkbox" class="sub-check" post-item="post-'+data[i].id+'" /></td>'
                                         + '<td class="tbl-50">'+row+' </td>  <td class="tbl-140">'+data[i].name+'</td> <td class="tbl-140">'+data[i].email+'</td>'
                                          +'<td class="tbl-140">'+data[i].phone+'</td> <td class="tbl-150">'+data[i].subject+'</td> <td class="tbl-200">'+data[i].message+'</td>'
                                + '<td>' + str1 + ' </td>  <td>' + str2 + ' </td>  <td>' + moment(data[i].createAt).format("DD/MM/YYYY HH:mm")+'</td>'
                                          +  ' <td>'+read+reply+' </td> </tr>';

                            $("#table-id").append(value);
                            row = row + 1;


                        }


                    var f = new FormData();
                    f.append("cond", cond);
                    f.append("dateForm", datefrom);
                    f.append("dateTo", dateto);
                    f.append("read", read);
                    f.append("reply", reply);
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("GetCountContact", "Contacts")",
                        data: f,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            var fdt = new FormData();
                            fdt.append("i", data);
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("RowEvent", "Contacts")",
                                data: fdt,
                                processData: false,
                                contentType: false,
                                success: function (dt) {
                                    var r = document.getElementsByClassName('page-item');
                                    while (r.length > 0) {
                                        r[0].parentNode.removeChild(r[0]);
                                    }
                                    var strs = "";
                                    for (var j = 1; j <= dt; j++) {
                                        if (j == page) {
                                            strs += '<li class="page-item page-link" data-page="page-'+j+'" style="background:#ddd">' + j + '</li>';

                                        }
                                        else {
                                            strs += '<li class="page-item page-link" data-page="page-' + j + '">' + j + '</li>'
                                        }
                                    }
                                    $("#paginations").append('<li class= "page-item page-link" data-page="prev" >&lt;</li > ' + strs + '<li class= "page-item page-link" data-page="next"  >&gt;</li>');

                                }
                            });

                        }

                    });
                }
            });

        }
    }

    $("#search-by-name").on('keyup', function (e) {
        if (e.key === 'Enter' || e.keyCode === 13) {
            SearchFilter(1);

        }

    });
    $("#search-by-datefrom").change(function () {
        SearchFilter(1);

    });
    $("#search-by-dateto").change(function () {
        SearchFilter(1);

    });
    $("#search-by-read").change(function () {
        SearchFilter(1);
    });
    $("#search-by-reply").change(function () {
        SearchFilter(1);
    });
    function SearchFilter(page) {
        ShowWaiting(800);
        var cond = $("#search-by-name").val();
        var dateFrom = document.getElementById("search-by-datefrom").value;
        var dateTo = document.getElementById("search-by-dateto").value;
        var read = $("#search-by-read").prop("checked");
        var reply = $("#search-by-reply").prop("checked");
        
        LoadDataContact(page, cond, dateFrom, dateTo, read, reply);
}

</script>