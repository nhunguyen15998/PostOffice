@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Product management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@model epjSem3.Models.ModelViews.ProductModel
<div class="col-12" style="display: table; background: white; top: 20px;box-shadow: rgb(248 242 225 / 0.92) 10px 10px 20px 5px; padding:20px">
    <div style="height:50px;position:relative; padding:0">
        <button class="btn-action delete" id="btnDelete" style="float:left;margin-right:2vw">Delete</button>
        <input class="input-search form-control" style="float:left;width:380px;" type="text" placeholder="Search by code, name" />
        <button class="btn-action save" id="btnCreate" style="float:right;">Create</button>

    </div>
    <table class="table" style=" border:2px solid #ddd;width:inherit" id="table-id">
        <tr style="color: white; background: #747583">
            <th><input type="checkbox" id="check-all" onclick="SelectAll(this)" /></th>
            <th>#</th>
            <th>Code</th>
            <th>Name</th>
            <th>Category</th>
            <th>Description</th>
            <th>Price</th>
            <th>Created at</th>
            <th>Status</th>
            <th>Action</th>
        </tr>
        <tr class="table-item">
            <td class="tbl-10"><input type="checkbox" class="sub-check" post-item="post-" /></td>
            <td class="tbl-30">1</td>
            <td class="tbl-180">bababbabnannanasbbsbba</td>
            <td class="tbl-200">babbababbabaabbabbbabba</td>
            <td class="tbl-120">babbabababbabababbaba</td>
            <td class="tbl-150">babbabababbabababbaba</td>
            <td class="tbl-110">babababbaba</td>
            <td class="tbl-100">annananaaa</td>
            <td class="sts-item tbl-40" id="sts-"></td>
            <td class="tbl-180">
                <span oid="object-1" class="action-icon view view-branch" style="padding:10px 5px 10px 10px">
                    <i class="fa fa-eye"></i>
                </span>
                <span oid="object-1" class="action-icon edit edit-branch" style="padding:10px 5px 10px 10px">
                    <i class="fa fa-edit"></i>
                </span>

                <span oid="object-1" class="action-icon delete delete-branch">
                    <i class="fa fa-trash"></i>
                </span>
            </td>
        </tr>


    </table>
    <div class="pagination-container" style="cursor:pointer">
        <nav aria-label="Page navigation example" style="position:unset;box-shadow:none; background:none;padding:0">
            <ul class="pagination" id="paginations">
                <li class="page-item page-link" data-page="prev">&lt;</li>
                @for (int i = 1; i <= ViewBag.pagi; i++)
                {
                    if (i == 1)
                    {
                        <li class="page-item page-link" data-page="page-1" style="background:#ddd">@i</li>

                    }
                    else
                    {
                        <li class="page-item page-link" data-page="page-@i">@i</li>
                    }
                }
                <li class="page-item page-link" data-page="next">&gt;</li>
            </ul>
        </nav>
    </div>
</div>
<div id="view-main">
    <div id="view-sub" class="col-11">
        <div class="col-12" id="view-title">
            <label></label>
            <span style="float:right; cursor:pointer" id="CloseForm">
                <i class="fa fa-window-close" style="pointer-events:none;font-size:38px"></i>
            </span>
        </div>
        <div id="content">
            @* @using (Html.BeginForm("RoleCU", "Auth", FormMethod.Post, new { @id = "form-pd" }))
                {*@
            <div class="col-12" style="padding:20px;min-height:450px;display:table;">
                <div class="col-5" style="border-right:3px solid #f4e8e4;min-height:inherit;float:left">
                    @Html.AntiForgeryToken()

                    <label class="text-color">
                        Code:
                        <span class="text-readonly">4444111558755874</span>
                    </label>
                    <br />
                    <label class="text-color mt-0">Name:</label>
                    <input class="input-form-cu" type="text" placeholder="name" id="ip-name" />
                    <label class="_error" id="name-error"></label>
                    <br />
                    <label class="text-color mt-0">Price:</label>
                    <input class="input-form-cu" type="text" placeholder="price" id="ip-price" />
                    <label class="_error" id="price-error"></label>
                    <br />
                    <label class="text-color mt-0">Description:</label>
                    <textarea class="input-form-cu txt-area" type="text" placeholder="name" id="ip-des"></textarea>
                    <label class="_error" id="des-error"></label>
                    <br />
                    <label class="text-color mt-0">Quantity:</label>
                    <input class="input-form-cu" type="text" placeholder="quantity" id="ip-qty" />
                    <label class="_error" id="qty-error"></label>
                    <br />

                </div>
                <div class="col-7" style="min-height:inherit;float:left">
                    <label class="text-color mt-2">Category:</label>
                    @Html.DropDownListFor(model => model.categoryId, new List<SelectListItem> { new SelectListItem { Value = "1", Text = "Caterogy 1" },
                                                                                              new SelectListItem { Value = "0", Text = "category 2" },
                                                                                              new SelectListItem { Value = "2", Text = "category 3" } }, new { @style = "", @class = "dropdownlist" })

                    @*  @Html.DropDownList("accountid", new SelectList(ViewBag.Accounts, "AccountID", "AccountName"))
                        @Html.DropDownListFor(model=>model.parent_id,new List<SelectListItem> { new SelectListItem { Value = "0", Text = "Select parent" } }
        .Concat(db.categories.Where(x=>x.status==true&&Model.id!=x.id&&x.parent_id==0).Select(x => new SelectListItem { Text = x.name, Value = x.id.ToString() })), new { @style = "width: 300px; height: 45px; border: 2px solid #e76c39;border-radius:5px; cursor:pointer;" })
                    *@
                    <label class="text-color mt-3">Status:</label>
                    @Html.DropDownListFor(model => model.status, new List<SelectListItem> { new SelectListItem { Value = "1", Text = "Activated" },
                                                                                              new SelectListItem { Value = "0", Text = "Deactivated" },
                                                                                              new SelectListItem { Value = "2", Text = "status 3" } }, new { @style = "", @class = "dropdownlist" })



                    <input id="add-attr" type="checkbox" class="mt-3" />
                    <label>Add product attribute</label>
                    <br />
                    <div id="pd-attr">

                    </div>
                </div>
            </div>
            <div class="col-12" style=" min-height: 70px; border-radius: 0 0 5px 5px; text-align:center">
                <button id="btnPDSave" type="submit" class="save btn-action pl-4 pr-4 pt-2 pb-2">Save</button>
                <a id="btnRoleCancel" onclick="ResetForm()" class="cancel btn-action ml-1" style="cursor:pointer; padding:12px 25px">Cancel</a>
            </div>
            @*}*@
        </div>
    </div>
</div>
<div class="view-create col-12">
    <div class="col-6 container sub-create-attr" style="display:block">
        <div class="col-12 title-create">
            <label>Create attribute</label>
            <span style="float:right; cursor:pointer" id="CloseFormCreate">
                <i class="fa fa-window-close" style="pointer-events:none;font-size:38px"></i>
            </span>
        </div>
        <div id="create-attr" style="padding:20px">
            <label class="text-color mt-0">Name:</label>
            <input class="input-form-cu" type="text" placeholder="name" id="ip-name-attr-create" />
            <label class="_error" id="name-attr-error"></label>
            <br />
            <label class="text-color mt-0">Type:</label>
            <label class="text-color mt-0" id="select-attr"></label>

            <button class="btn-action save mt-3 mb-4 container" id="btnAttrSave">Save</button>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<script type="text/javascript">
    var obj = null;
    var attr_type = "";
    $('body').delegate(".close-attr", "click", function () {
        $(this).closest(".attr-child").remove();
        $("#add-attr").prop("checked", false);
    });
    $("#btnCreate").click(function () {
        OpenForm("Create product",0);
    });
    function isEmpty(str) {
        return str.length==0?true:false;
    }
    $("#btnPDSave").click(function () {
        if (validated()) {
            alert(true)
        }



    });
    function validated() {
        ResetValidate();
        validatedAttr();

        var regex = /^[1-9][0-9]*$/;
        var name = $("#ip-name").val();
        var price = $("#ip-price").val();
        var des = $("#ip-des").val();
        var qty = $("#ip-qty").val();
        if (isEmpty(name) || !qty.match(regex) || isEmpty(qty) || isEmpty(des) || (isEmpty(price) && $("#add-attr").prop("checked")==false)) {
            if (isEmpty(name)) $("#name-error").html("* required");
            if (!qty.match(regex)) $("#qty-error").html("invalid qty");
            if (isEmpty(qty)) $("#qty-error").html("* required");
            if (isEmpty(des)) $("#des-error").html("* required");
            if (!price.match(regex) && !isEmpty(price)) $("#price-error").html("invalid price");
            if (isEmpty(price) && $("#add-attr").prop("checked") == false) $("#price-error").html("* required");

            return false;
        }
        return true;
    }
    function arraysEqual(a, b) {
        if (a === b) return true;
        if (a == null || b == null) return false;
        if (a.length !== b.length) return false;
        for (var i = 0; i < a.length; ++i) {
            if (a[i] !== b[i]) return false;
        }
        return true;
    }
    function validatedAttr() {
        var e = $(".attr-child").find(".render-child .item-child");
        var regex = /^[1-9][0-9]*$/;
        if ((GetListChild($(".add-more"), false) == 0 && isEmpty($("#ip-price").val()) && $("#add-attr").prop("checked") == true)) {
            $("#add-attr-error").html("Please fill in all fields");
            return false;
        }

        for (var i = 0; i < e.length; i++) {
            if (isEmpty($(e[i]).find("input").val()) || !($(e[i]).find("input").val()).match(regex) || $(e[i]).find(".ip-color").val() == -1 || $(e[i]).find(".ip-size").val() == -1 || $(e[i]).find(".ip-width").val() == -1 || $(e[i]).find(".ip-height").val() == -1) {
                $("#add-attr-error").html("Please fill in all fields");
                return false;
            }
        }
        for (var i = 0; i < e.length; i++) {
            var slc1 = [$(e[i]).find(".ip-color").val(), $(e[i]).find(".ip-size").val(), $(e[i]).find(".ip-width").val(), $(e[i]).find(".ip-height").val()];
            for (var j = i + 1; j < e.length; j++) {
                var slc2 = [$(e[j]).find(".ip-color").val(), $(e[j]).find(".ip-size").val(), $(e[j]).find(".ip-width").val(), $(e[j]).find(".ip-height").val()];
                if (arraysEqual(slc1, slc2)) {
                    $("#add-attr-error").html("There are many identical classifications");
                    return false;
                }
            }
        }
       

    }
    function ResetValidate() {
        er = document.getElementsByClassName("_error");
        for (var i = 0; i < er.length; i++) {
            $(er[i]).html("");
        }
    }
    $(".edit-role").click(function () {
        var id = $(this).attr("oid").replace("object-", "");
        OpenForm("Update product",id)
    });
    function OpenForm(type, id) {

        $("#view-main").css("display", "block");
        document.getElementById("view-title").children[0].innerHTML = type;
        $(".sidebar").css("pointer-events", "none")


    }

    $("#CloseForm").click(function () {
        ResetForm();
    });
    $("#btnAttrSave").click(function () {
        $("#name-attr-error").html("");
        var name = $("#ip-name-attr-create").val();
        var slt = attr_type == "color" ? 1 : (attr_type == "size" ? 2 : (attr_type == "width" ? 3 : 4))
        if (isEmpty(name)) {
            $("#name-attr-error").html("* required");

        } else if (CheckExistsName(name, slt) == "true") {
            $("#name-attr-error").html("This attribute is already exists");

        } else {
            var f = new FormData();
            f.append("name", name);
            f.append("type", slt);

            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveAttribute", "Product")",
                data: f,
                async: false,
                processData: false,
                contentType: false,
                success: function (data) {
                    CloseFormCreate();
                    $(".ip-" + attr_type).append('<option value=' + data.id + '>' + data.name + '</option>')
                    obj.val(data.id);
                    obj = null;
                    attr_type = null;

                }
            });
        }
    });
    function CheckExistsName(name,type) {
        var f = new FormData();
        f.append("name", name);
        f.append("type", type);
        var q = $.ajax({
            type: "POST",
            url: "@Url.Action("CheckExistsName", "Product")",
            data: f,
            async: false,
            processData: false,
            contentType: false,
            success: function (data) {
                return data;

            }
        }).responseText;
        return q;
    }
    function ResetForm() {
        CloseForm();
         $("#ip-name").val("");
        $("#ip-price").val("");
        $("#ip-des").val("");
        $("#ip-qty").val("");
        @{epjSem3.Controllers.ProductController.id = 0; }

        er = document.getElementsByClassName("_error");
        for (var i = 0; i < er.length; i++) {
            $(er).html("");
        }
        $("#pd-attr").empty();
        $("#add-attr").prop("checked",false);

    }
    $("#add-attr").click(function () {
        if ($(this).prop("checked") == true) {
            $("#pd-attr").append('<div class="attr-child mt-1"> <div class="choose-attr">'
                + '<input type="checkbox" class="color-choose"/>'
                + '<label class="text-color attr-choose">color</label>'
                + '<input type="checkbox" class="size-choose" />'
                + '<label class="text-color attr-choose">size</label>'
                + '<input type="checkbox" class="width-choose"/>'
                + '<label class="text-color attr-choose">width</label>'
                + '<input type="checkbox" class="height-choose" />'
                + '<label class="text-color attr-choose">height</label>'
                + '<span style="float:right; cursor:pointer" class="close-attr">'
                + '<i class="fa fa-window-close close-add-attr"></i> </span>'
                + ' <span class="add-more"><i class="fa fa-plus-circle"></i></span><span class="_error " id="add-attr-error" style="float:left"></span> </div > <div class="render-child p-1">'
                + '</div></div >');
        } else {
            $("#pd-attr").empty();
        }

    });

    function GetListChild(ele,bool) {
        var e = ele.closest(".attr-child").find(".choose-attr");
        if (e.find("input:checked").length == 1&&bool==true) {
            ele.closest(".attr-child").find(".render-child").append('<div class="item-child"></div>')
        }
        return e.find("input:checked").length;

    }
    function ChildAction(ele,val, type) {
        @*if (type == true) {
            ele.
        }*@
    }
    $('body').delegate(".add-more", "click", function () {
        if (GetListChild($(this), false)==0) {
            ShowMessage(false,"Please choose at least 1 attribute")
        } else {
            var str = $(this).closest(".attr-child").find(".render-child").children(".item-child").first().html();
            $(this).closest(".attr-child").find(".render-child").append('<div class="item-child">'+str+'</div>');
        }
    });
    $('body').delegate(".color-choose", "click", function () {

        if ($(this).prop("checked") == true) {
            var str = "";
            if (GetListChild($(this), true) == 1) {
                str = '<input type="text" placeholder="price" class="input-attr input-form-cu"/><span class="subtract"><i class="fa fa-times-circle"></i></span>';
            }
            $(this).closest(".attr-child").find(".item-child").prepend('<select class="dropdownlist input-attr ip-color">' + GetListAttribute(1) + '</select>' + str)

        } else {
            $(this).closest(".attr-child").find(".item-child").find(".ip-color").remove();
            GetListChild($(this)) == 0 ? $(this).closest(".attr-child").find(".render-child").empty() : true
        }
    });
      function GetListAttribute(id) {
        var f = new FormData();
        f.append("id", id);

           var q= $.ajax({
                type: "POST",
                url: "@Url.Action("GetListAttribute", "Product")",
                data: f,
                async: false,
                processData: false,
                contentType: false,
                success: function (data) {
                    return data;

               }
           }).responseText;

        return q;

    };

    $('body').delegate(".size-choose", "click", function () {
        if ($(this).prop("checked") == true) {
            var str = "";
            if (GetListChild($(this), true)==1) {
                str = '<input type="text" placeholder="price" class="input-attr input-form-cu"/>';
            }
            $(this).closest(".attr-child").find(".item-child").prepend('<select class="dropdownlist input-attr ip-size">' + GetListAttribute(2) + '</select>' + str)

        } else {
            $(this).closest(".attr-child").find(".item-child").find(".ip-size").remove();
            GetListChild($(this)) == 0 ? $(this).closest(".attr-child").find(".render-child").empty() : true

        }
    });
    $('body').delegate(".height-choose", "click", function () {
        if ($(this).prop("checked") == true) {
            var str = "";
            if (GetListChild($(this), true)==1) {
                str = '<input type="text" placeholder="price" class="input-attr input-form-cu"/>';
            }
            $(this).closest(".attr-child").find(".item-child").prepend('<select class="dropdownlist input-attr ip-height">' + GetListAttribute(4) + '</select>' + str)

        } else {
            $(this).closest(".attr-child").find(".item-child").find(".ip-height").remove();
            GetListChild($(this)) == 0 ? $(this).closest(".attr-child").find(".render-child").empty() : true


        }
    });
    $('body').delegate(".width-choose", "click", function () {
        if ($(this).prop("checked") == true) {
            var str = "";
            if (GetListChild($(this), true)==1) {
                str = '<input type="text" placeholder="price" class="input-attr input-form-cu"/>';
            }
            $(this).closest(".attr-child").find(".item-child").prepend('<select class="dropdownlist input-attr ip-width">' + GetListAttribute(3) + '</select>' + str)

        } else {
            $(this).closest(".attr-child").find(".item-child").find(".ip-width").remove();
            GetListChild($(this)) == 0 ? $(this).closest(".attr-child").find(".render-child").empty() : true


        }
    });
    $('body').delegate(".ip-color", "change", function () {
        OpenFormCreateAttr($(this), "color")

    });
    $('body').delegate(".ip-size", "change", function () {
        OpenFormCreateAttr($(this), "size")

    });
    $('body').delegate(".ip-height", "change", function () {
        OpenFormCreateAttr($(this), "height")

    });
    $('body').delegate(".ip-width", "change", function () {
        OpenFormCreateAttr($(this),"width")
    });
    function OpenFormCreateAttr(obj_value, val) {
        if (obj_value.val() == 0) {
            $(".view-create").css("display", "block");
            obj = obj_value;
            attr_type = val;
            $("#select-attr").html(attr_type)
        }
    }
    $('body').delegate(".subtract", "click", function () {
        $(this).closest(".item-child").remove();
        if ($(".attr-child").find('.item-child').length == 0) {
            var e = $(".attr-child").find(".choose-attr input:checked");
            for (var i = 0; i < e.length; i++) {
                $(e[i]).prop("checked", false);
            }
        }
    });
    $("#CloseFormCreate").click(function () {
        CloseFormCreate();

                });
    function CloseFormCreate() {
        $('.view-create').css("display", "none");
        $('#ip-name-attr-create').val("");
        obj.val(-1);
    }
    $(".sub-check").click(function () {

        checkboxes = document.getElementsByClassName('sub-check');
        var k = checkboxes.length;
        for (var i = 0, n = k; i < n; i++) {
            if (checkboxes[i].checked == false) {
                document.getElementById("check-all").checked = false;
                k -= 1;
                break;
            }
        }
        if (k == checkboxes.length) {
            document.getElementById("check-all").checked = true;
        }
    });
</script>
