@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Product management";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    post_office.Services.IProductService pd = ViewBag.pd;
    post_office.Services.IProductCategoryService pdcate = ViewBag.pdcate;

}
@model post_office.Models.ProductModel
<div class="col-12" style="display: table; background: white; top: 20px;box-shadow: rgb(248 242 225 / 0.92) 10px 10px 20px 5px; padding:20px">
    <div style="height:50px;position:relative; padding:0">
        <button class="btn-action delete" id="btnDelete" style="float:left;margin-right:2vw">Delete</button>
        <input class="input-search form-control" style="float:left;width:380px;" type="text" placeholder="Search by code, name" />
        <button class="btn-action save" id="btnCreate" style="float:right;">Create</button>

    </div>
    <table class="table" style=" border:2px solid #ddd;width:inherit" id="table-id">
        <tr style="color: white; background: #747583">
            <th><input type="checkbox" id="check-all" onclick="SelectAll(this)" /></th>
            <th>#</th>
            <th></th>
            <th>Code</th>
            <th>Name</th>
            <th>Category</th>
            <th>Qty</th>
            <th>Price</th>
            @* <th>Created at</th>*@
            <th>Status</th>
            <th>Action</th>
        </tr>
        @{int k = 1;}
        @foreach (var item in (List<post_office.Models.ProductModel>)ViewBag.lsPD)
        {
            <tr class="table-item">
                <td class="tbl-10"><input type="checkbox" class="sub-check" post-item="post-@item.id" /></td>
                <td class="tbl-40">@k @{k++;}</td>
                <td class="tbl-40 p-2">@if (item.thumbnail != null)
                {<img src="~/img/ProductThumbnail/@item.thumbnail" width="45" height="45" />}</td>
                <td class="tbl-190">@item.code</td>
                <td class="tbl-200">@item.name</td>
                <td class="tbl-160">@pdcate.GetProductCategory(item.categoryId ?? 0).name</td>
                <td class="tbl-60">@pd.GetTotalQuantity(item.id)</td>
                <td class="tbl-110">@pd.GetPrice(item.id)</td>
                @*<td class="tbl-140">@item.createdAt.ToString("dd/MM/yyyy HH:mm")</td>*@
                <td class="sts-item tbl-40" id="sts-"></td>
                <td class="tbl-180">
                    <span oid="object-@item.id" class="action-icon view view-product" style="padding:10px 5px 10px 10px">
                        <i class="fa fa-eye"></i>
                    </span>
                    <span oid="object-@item.id" class="action-icon edit edit-product" style="padding:10px 5px 10px 10px">
                        <i class="fa fa-edit"></i>
                    </span>

                    <span oid="object-@item.id" class="action-icon delete delete-product">
                        <i class="fa fa-trash"></i>
                    </span>
                </td>
            </tr>

        }
    </table>
    <div class="pagination-container" style="cursor:pointer">
        <nav aria-label="Page navigation example" style="position:unset;box-shadow:none; background:none;padding:0">
            <ul class="pagination" id="paginations">
                <li class="page-item page-link" data-page="prev">&lt;</li>
                @for (int i = 1; i <= ViewBag.pagi; i++)
                {
                    if (i == 1)
                    {
                        <li class="page-item page-link" data-page="page-1" style="background:#ddd">@i</li>

                    }
                    else
                    {
                        <li class="page-item page-link" data-page="page-@i">@i</li>
                    }
                }
                <li class="page-item page-link" data-page="next">&gt;</li>
            </ul>
        </nav>
    </div>
</div>
<div id="view-main">
    <div id="view-sub" class="col-11">
        <div class="col-12" id="view-title">
            <label></label>
            <span style="float:right; cursor:pointer" id="CloseForm">
                <i class="fa fa-window-close" style="pointer-events:none;font-size:38px"></i>
            </span>
        </div>
        <div id="content">
            @* @using (Html.BeginForm("RoleCU", "Auth", FormMethod.Post, new { @id = "form-pd" }))
                {*@
            <div class="col-12" style="padding:0 0 0 20px;min-height:450px;display:table;">
                <div class="col-5" style="border-right:3px solid #f4e8e4;min-height:inherit;float:left">
                    @Html.AntiForgeryToken()

                    <label class="text-color">
                        Code:
                        <span class="text-readonly" id="ip-code"></span>
                    </label>
                    <br />
                    <label class="text-color mt-0">Name:</label>
                    <input class="input-form-cu" type="text" placeholder="name" id="ip-name" />
                    <label class="_error" id="name-error"></label>
                    <br />
                    <label class="text-color mt-0">Price:</label>
                    <input class="input-form-cu" type="text" placeholder="price" id="ip-price" />
                    <label class="_error" id="price-error"></label>
                    <br />
                    <label class="text-color mt-0">Description:</label>
                    <textarea class="input-form-cu txt-area" type="text" placeholder="name" id="ip-des"></textarea>
                    <label class="_error" id="des-error"></label>

                    <div style="display:table-row; height: auto; min-height: 50px; background: none; float: left;padding:0 " class="col-12">
                        <div id="viewer" style="border: 2px dashed #eed192;border-radius: 6px; min-height: 20px;height:inherit;padding-top:10px; text-align:center">


                            <div style="margin-bottom:10px" id="content">Click or drag to upload</div>

                            <img id="imgViewer" style="border:none; width:90%;height:auto;margin-bottom:5vh;border-radius:20px;" />
                        </div>
                        <input type="file" id="ip-thumbnail" onchange="ReadImage(this)" class="main-post" accept="image/bmp,image/gif,image/jpeg,image/png,image/tiff,image/webp" aria-hidden="true" tabindex="-1" style="cursor: pointer; height: 100%; opacity: 0;
                        position: absolute; width: 100%; left: 0px; top: 0px; font-size: 0px;">
                    </div>
                    <div class="col-12 container" style=" text-align:center;height: auto;float: left;margin-top:-30px;display:table-row;">
                        <button id="trashimg" style="padding: 10px 17px; background: #e12c2c; border-radius: 50%; border: 0; font-size: 20px; display: none"><i style="color:white;pointer-events:none" class="fa fa-trash"></i></button>
                    </div>
                </div>
                <div class="col-7" style="min-height:inherit;float:left">
                    <label class="text-color mt-2">Quantity:</label>
                    <input class="input-form-cu" type="text" placeholder="quantity" id="ip-qty" />
                    <label class="_error" id="qty-error"></label>
                    <label class="text-color mt-0">Category:</label>
                    @Html.DropDownListFor(model => model.categoryId, new List<SelectListItem> { new SelectListItem { Value = "0", Text = "Select cate" } }, new { @class = "dropdownlist", @id = "cate-select" })

                    @*  @Html.DropDownList("accountid", new SelectList(ViewBag.Accounts, "AccountID", "AccountName"))
                                        @Html.DropDownListFor(model=>model.parent_id,new List<SelectListItem> { new SelectListItem { Value = "0", Text = "Select parent" } }
                        .Concat(db.categories.Where(x=>x.status==true&&Model.id!=x.id&&x.parent_id==0).Select(x => new SelectListItem { Text = x.name, Value = x.id.ToString() })), new { @style = "width: 300px; height: 45px; border: 2px solid #e76c39;border-radius:5px; cursor:pointer;" })
                    *@
                    <label class="text-color mt-3">Status:</label>
                    @Html.DropDownListFor(model => model.status, new SelectList(ViewBag.ls_status, "Key", "Value"), new { @class = "dropdownlist", @id = "status-select" })



                    <input id="add-attr" type="checkbox" class="mt-3" />
                    <label>Add product attribute</label>
                    <br />
                    <div id="pd-attr">

                    </div>
                </div>
            </div>
            <div class="col-12" style=" min-height: 70px; border-radius: 0 0 5px 5px; text-align:center">
                <button id="btnPDSave" type="submit" class="save btn-action pl-4 pr-4 pt-2 pb-2">Save</button>
                <a id="btnRoleCancel" onclick="ResetForm()" class="cancel btn-action ml-1" style="cursor:pointer; padding:12px 25px">Cancel</a>
            </div>
            @*}*@
        </div>
    </div>
</div>
<div class="view-create" id="view-detail" style="display:none;">
    <div class="sub-create-attr col-10" style="margin:2% auto 5% auto">
        <div class="col-12 title-create">
            <label>Product details</label>
            <span style="float:right; cursor:pointer" id="CloseFormDetails">
                <i class="fa fa-window-close" style="pointer-events:none;font-size:38px"></i>
            </span>
        </div>
        <div id="content-details" class="col-12" style="padding:20px;min-height:450px;display:table;">
            <div class="col-5 container" style="min-height:inherit;float:left">
            </div>
            <div class="col-7" style="min-height:inherit;float:left">

            </div>
        </div>
    </div>
</div>



<div class="view-create col-12">
    <div class="col-6 container sub-create-attr" style="display:block">
        <div class="col-12 title-create">
            <label>Create attribute</label>
            <span style="float:right; cursor:pointer" id="CloseFormCreate">
                <i class="fa fa-window-close" style="pointer-events:none;font-size:38px"></i>
            </span>
        </div>
        <div id="create-attr" style="padding:20px">
            <label class="text-color mt-0">Name:</label>
            <input class="input-form-cu" type="text" placeholder="name" id="ip-name-attr-create" />
            <label class="_error" id="name-attr-error"></label>
            <br />
            <label class="text-color mt-0">Type:</label>
            <label class="text-color mt-0" id="select-attr"></label>

            <button class="btn-action save mt-3 mb-4 container" id="btnAttrSave">Save</button>
        </div>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

<script type="text/javascript">

    var obj = null;
    var attr_type = "";
       window.onload = function () {

        var mess = "@(post_office.Controllers.Administrator.ProductsController.mess)";
        if (mess == "Saved successfully!" || mess == "Deleted successfully!")
            ShowMessage(true, mess)
        else if (mess != "Saved successfully!" && mess != "")
            ShowMessage(false, mess)
           @{post_office.Controllers.Administrator.ProductsController.mess = "";}


    }
    $('body').delegate(".close-attr", "click", function () {
        $(this).closest(".attr-child").remove();
        $("#add-attr").prop("checked", false);
    });

     $('body').delegate(".view-product", "click", function () {
         var id = $(this).attr("oid").replace("object-", "");
         var fdt = new FormData();
         fdt.append("id", id)
         ShowWaiting(1500);

          $.ajax({
                type: "POST",
                url: "@Url.Action("GetProduct", "Products")",
                data: fdt,
                processData: false,
                contentType: false,
              success: function (data) {
                  $("#content-details").find("div").first().append('<img src="/img/ProductThumbnail/' + (data.thumbnail != null ? data.thumbnail : "no_image.png") + '" style="width:90%; height:auto; border:10px solid #ebe2c3"/>')
                    $("#content-details").find("div").last().append('<label class="text-color"> Code: <span class="text-readonly">' + data.code + '</span></label ><br/><label class="text-color"> Name: <span class="text-readonly">' + data.name + '</span></label ><br/><label class="text-color"> Description: <span class="text-readonly">' + data.description + '</span></label ><br/>' +
                        '<label class="text-color"> Category: <span class="text-readonly">' + GetCategory(data.categoryId) + '</span></label ><br/><label class="text-color"> Price: <span class="text-readonly">' + (data.price == null ? "" : data.price) + '</span></label ><br/><label class="text-color"> Quantity: <span class="text-readonly">' + (data.qty == null ? "" : data.qty) + '</span></label ><br/><label class="text-color"> Created at: <span class="text-readonly">' + moment(data.createdAt).format("DD/MM/YYYY HH:mm") + '</span></label ><br/>'+
                        '<label class="text-color"> Status: <span class="text-readonly">' + (data.status == 1 ? "Activated" : "Deactivated") + '</span></label ><br/><label class="text-color"> Attribute(s):<br/> ');

                 },
                 error: function () {
                     console.log("error")
                 }
          });
          //GetProductAttribute
             $.ajax({
                type: "POST",
                url: "@Url.Action("GetProductAttribute", "Products")",
                data: fdt,
                processData: false,
                contentType: false,
                success: function (data) {
                     if (data.length == 0) {
                         $("#content-details").find("div").last().append('<span class="text-readonly">None</span></label >');

                     } else {
                         var ls_attr = [];
                         for (var i = 0; i < data.length; i++) {
                             if (data[i].colorID != null) {
                                 ls_attr.push({
                                     num: 1,
                                     slt: data[i].colorID,
                                     pr: data[i].price,
                                     qt: data[i].qty
                                 });
                             }
                             if (data[i].lengthID != null) {
                                 ls_attr.push({
                                     num: 2,
                                     slt: data[i].lengthID
                                 });
                             }
                             if (data[i].widthID != null) {
                                 ls_attr.push({
                                     num: 3,
                                     slt: data[i].widthID
                                 });
                             }
                             if (data[i].heightID != null) {
                                 ls_attr.push({
                                     num: 4,
                                     slt: data[i].heightID
                                 });
                             }
                         }

                        ShowDetailSupport(ls_attr)

                     }

                 },
                 error: function () {
                     console.log("error")
                 }
             });
         $(".sidebar").css("pointer-events", "none")
         $("#view-detail").css("display", "block")
     });
    $("#btnCreate").click(function () {
        OpenForm("Create product",0);
    });

    function ReadImage(input) {
        document.getElementById("trashimg").style.removeProperty("display");
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {

                $('#imgViewer').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
        }
    }


                $("#btnPDSave").click(function () {
                    ShowWaiting(3500);

        if (validated()) {

            var mdl = {
                id:@post_office.Controllers.Administrator.ProductsController._id,
                name: $("#ip-name").val(),
                price: $("#ip-price").val(),
                description: $("#ip-des").val(),
                qty: $("#ip-qty").val(),
                categoryId:$("#cate-select").val(),
                status:$("#status-select").val()
            };
            var e = $(".attr-child").find(".render-child .item-child");
            var lsAttr = [];
            for (var i = 0; i < e.length; i++) {
                lsAttr.push(
                    {
                        colorID: $(e[i]).find(".ip-color").val(),
                        lengthID: $(e[i]).find(".ip-length").val(),
                        widthID: $(e[i]).find(".ip-width").val(),
                        heightID: $(e[i]).find(".ip-height").val(),
                        qty: $(e[i]).find(".input-qty").val(),
                        price: $(e[i]).find(".input-price").val()
                    }
                )
            }
            var f = new FormData();
            f.append("mdl", JSON.stringify(mdl));
            f.append("lsAttr", JSON.stringify(lsAttr));
            f.append("file",document.getElementById("ip-thumbnail").files[0]);
               $.ajax({
                type: "POST",
                url: "@Url.Action("SaveProduct", "Products")",
                data: f,
                async: false,
                processData: false,
                contentType: false,
                   success: function () {
                       window.location.href = "@Url.Action("Index","Products")"

                }
            });
        }



    });
    $("#trashimg").click(function () {
        $("#imgViewer").attr("src", null);
        $("#ip-thumbnail").val("");
        $(this).css("display","none")
    });
    function validated() {
        ResetValidate();

        var regex = /^[1-9][0-9]*$/;
        var name = $("#ip-name").val();
        var price = $("#ip-price").val();
        var des = $("#ip-des").val();
        var qty = $("#ip-qty").val();

        // alert(!validatedAttr() + " " + isEmpty(name) + " " + (!isEmpty(qty) && isEmpty(price)) +" "+ (isEmpty(qty) && !isEmpty(price))+" "+ (!price.match(regex) && !isEmpty(price)) +" "+ (!qty.match(regex) && !isEmpty(qty)) +" "+ (isEmpty(qty) && $("#add-attr").prop("checked") == false) +" "+ isEmpty(des) +" "+ (isEmpty(price) && $("#add-attr").prop("checked") == false)+" ");
        if ( !validatedAttr() || isEmpty(name) || (!isEmpty(qty) && isEmpty(price)) || (isEmpty(qty) && !isEmpty(price)) || (!price.match(regex) && !isEmpty(price)) || (!qty.match(regex) && !isEmpty(qty)) || (isEmpty(qty) && $("#add-attr").prop("checked") == false) || isEmpty(des) || (isEmpty(price) && $("#add-attr").prop("checked") == false)) {

            if (isEmpty(name)) $("#name-error").html("* required");
            if (!qty.match(regex) && !isEmpty(qty)) $("#qty-error").html("invalid quantity");
            if (isEmpty(qty) && $("#add-attr").prop("checked") == false) $("#qty-error").html("* required");
            if (isEmpty(des)) $("#des-error").html("* required");
            if (!price.match(regex) && !isEmpty(price)) $("#price-error").html("invalid price");
            if (isEmpty(price) && $("#add-attr").prop("checked") == false) $("#price-error").html("* required");
            if (!isEmpty(qty) && isEmpty(price)) $("#price-error").html("* required");
            else if (isEmpty(qty) && !isEmpty(price)) $("#qty-error").html("* required");
            $("._error").shake();
            return false;
        }
        return true;
    }

    function arraysEqual(a, b) {
        if (a === b) return true;
        if (a == null || b == null) return false;
        if (a.length !== b.length) return false;
        for (var i = 0; i < a.length; ++i) {
            if (a[i] !== b[i]) return false;
        }
        return true;
    }
    function validatedAttr() {
        var e = $(".attr-child").find(".render-child .item-child");
        var regex = /^[1-9][0-9]*$/;
        if (GetListChild($(".add-more"), false) == 0 && $("#add-attr").prop("checked") == true) {
            $("#add-attr-error").html("Please fill in all fields");
            return false;
        }

        for (var i = 0; i < e.length; i++) {
            if (isEmpty($(e[i]).find(".input-price").val()) || !($(e[i]).find(".input-price").val()).match(regex) || isEmpty($(e[i]).find(".input-qty").val()) || !($(e[i]).find(".input-qty").val()).match(regex) || $(e[i]).find(".ip-color").val() == -1 || $(e[i]).find(".ip-length").val() == -1 || $(e[i]).find(".ip-width").val() == -1 || $(e[i]).find(".ip-height").val() == -1) {
                $("#add-attr-error").html("Invalid input");
                return false;
            }
        }
        for (var i = 0; i < e.length; i++) {
            var slc1 = [$(e[i]).find(".ip-color").val(), $(e[i]).find(".ip-length").val(), $(e[i]).find(".ip-width").val(), $(e[i]).find(".ip-height").val()];
            for (var j = i + 1; j < e.length; j++) {
                var slc2 = [$(e[j]).find(".ip-color").val(), $(e[j]).find(".ip-length").val(), $(e[j]).find(".ip-width").val(), $(e[j]).find(".ip-height").val()];
                if (arraysEqual(slc1, slc2)) {
                    $("#add-attr-error").html("There are many identical classifications");
                    return false;
                }
            }
        }
        return true;

    }


    $(".edit-product").click(function () {
        var id = $(this).attr("oid").replace("object-", "");
        OpenForm("Update product",id)
    });
    function OpenForm(type, id) {
        if (document.getElementById("ip-thumbnail").files[0] == null) {
            $("#trashimg").css("display", "none");

        }


        var fdt = new FormData();
        fdt.append("id", id);
          $.ajax({
            type: "POST",
            url: "@Url.Action("GetCategoryOption", "Products")",
            data: fdt,
            processData: false,
            contentType: false,
            success: function (data) {
                $("#cate-select").empty();
                $("#cate-select").append(data);

            }
        });
         if (id != 0) {
             $.ajax({
                type: "POST",
                url: "@Url.Action("GetProduct", "Products")",
                data: fdt,
                processData: false,
                contentType: false,
                success: function (data) {
                     $("#ip-name").val(data.name);
                     $("#ip-code").html(data.code);
                    $("#ip-price").val(data.price);
                    $("#ip-des").val(data.description);
                    $("#ip-qty").val(data.qty);
                    $("#trashimg").css("display", "none");
                    if (data.thumbnail != null) {
                        $("#imgViewer").attr("src", "/img/ProductThumbnail/" + data.thumbnail);
                        document.getElementById("trashimg").style.removeProperty("display");

                    }


                 },
                 error: function () {
                     console.log("error")
                 }
            });
             //GetProductAttribute
             $.ajax({
                type: "POST",
                url: "@Url.Action("GetProductAttribute", "Products")",
                data: fdt,
                processData: false,
                contentType: false,
                 success: function (data) {
                     if (data.length == 0) {
                         $("#add-attr").prop("checked", false);
                     } else {
                         $("#add-attr").prop("checked", true);
                         ShowAddAttr('#add-attr');
                         var ls_attr = [];
                         for (var i = 0; i < data.length; i++) {
                             if (data[i].colorID != null) { CheckAttrCheck(1);
                                 ls_attr.push({
                                     num: 1,
                                     slt: data[i].colorID,
                                     pr: data[i].price,
                                     qt: data[i].qty
                                 });
                             }
                             if (data[i].lengthID != null) { CheckAttrCheck(2);
                                 ls_attr.push({
                                     num: 2,
                                     slt: data[i].lengthID
                                 });
                             }
                             if (data[i].widthID != null) {  CheckAttrCheck(3);
                                 ls_attr.push({
                                     num: 3,
                                     slt: data[i].widthID
                                 });
                             }
                             if (data[i].heightID != null) {   CheckAttrCheck(4);
                                 ls_attr.push({
                                     num: 4,
                                     slt: data[i].heightID
                                 });
                             }
                         }
                         AddAttrUpdate(SupportAddAttrUpdate(ls_attr));

                     }

                 },
                 error: function () {
                     console.log("error")
                 }
            });
        }

        document.getElementById("view-title").children[0].innerHTML = type;
        $(".sidebar").css("pointer-events", "none")
        $("#view-main").css("display", "block");


                }
       function ShowDetailSupport(ls_attr) {

        ls = [];
        for (var j = 0; j < ls_attr.length; j++) {
            ls.push({
                name: ls_attr[j].num == 1 ? "color" : (ls_attr[j].num == 2 ? "length" : (ls_attr[j].num == 3 ? "width" : "height")),
                price: ls_attr[j].pr != null ? ls_attr[j].pr : null,
                select: ls_attr[j].slt,
                qty: ls_attr[j].qt != null ? ls_attr[j].qt : null
            });
           }

        var str = "";
        var str2 = "";
        var str3 = "";
        var str4 = "";
       var str5 = "";
           var str6 = "";
           var str7 = "";
           var str8 = "";
           var count = 1;
        var str9 = "";
        var ls_name = [];

        for (var i = 0; i < ls.length; i++) {
            ls_name.push(ls[ls.length-i-1].name);
           }
        var _name = "";
        let uniqueChars = [...new Set(ls_name)];

        for (var i = 0; i < uniqueChars.length; i++) {
            _name += '<th  style="color:#bc4f0f">' + ls_name[i] + '</th>'
        }
        for (var i = 0; i < ls.length; i++) {
            if (ls[i].price != null) {
                str = '<td>' + ls[i].qty + '</td><td>' + ls[i].price + '</td>'
            }
            str2 = '<td>' + GetAttributeName(ls[i].select) + '</td>'


            if (str == "") {
                count++;
                str3 = str3.slice(0, 26) + str2 + str3.slice(26, str3.length);
                str4 += str3;
                if (uniqueChars.length == 3 && (count ==3||count==5)) {
                    str6 = str3;
                    str7 += str6;
                }
                if (uniqueChars.length == 4 && (count == 4 || count == 7)) {
                    str6 = str3;
                    str7 += str6;
                }
                str2 = "";

            }
            else {
                str3 = '<tr style="color:#cf7c33">' + str2 + str + '</tr>';
                str5 += str3;
                str = str2 = "";

            }


        }



           res = '<table class="col-12 table-bordered"  ><tr> ' + _name + '<th style="color:#bc4f0f">quantity</th><th  style="color:#bc4f0f">price</th></tr>' + (uniqueChars.length == 1 ? str5 : (uniqueChars.length == 2 ? str4 : str7)) + "<table>";
           $("#content-details").find("div").last().append(res)
    }
    function SupportAddAttrUpdate(ls_attr) {
        ls = [];
        for (var j = 0; j < ls_attr.length; j++) {
            ls.push({
                name: ls_attr[j].num == 1 ? "color" : (ls_attr[j].num == 2 ? "length" : (ls_attr[j].num == 3 ? "width" : "height")),
                number: ls_attr[j].num,
                select: ls_attr[j].slt,
                price: ls_attr[j].pr!=null ? ls_attr[j].pr : null,
                qty: ls_attr[j].qt!=null ? ls_attr[j].qt : null
            });
        }
        return ls;
    }
    function CheckAttrCheck(type) {
        var str = type == 1 ? "color-choose" : (type == 2 ? "length-choose" : (type == 3 ? "width-choose" : "height-choose"));
         $("." + str).prop("checked",true);
    }

    $("#CloseForm").click(function () {
        ResetForm();
    });
    $("#btnAttrSave").click(function () {
        $("#name-attr-error").html("");
        var name = $("#ip-name-attr-create").val();
        var slt = attr_type == "color" ? 1 : (attr_type == "length" ? 2 : (attr_type == "width" ? 3 : 4))
        if (isEmpty(name)) {
            $("#name-attr-error").html("* required");

        } else if (CheckExistsName(name, slt) == "true") {
            $("#name-attr-error").html("This attribute is already exists");

        } else {
            var f = new FormData();
            f.append("name", name);
            f.append("type", slt);

            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveAttribute", "Products")",
                data: f,
                async: false,
                processData: false,
                contentType: false,
                success: function (data) {
                    CloseFormCreate();
                    $(".ip-" + attr_type).append('<option value=' + data.id + '>' + data.name + '</option>')
                    obj.val(data.id);
                    obj = null;
                    attr_type = null;

                }
            });
        }
    });
    function CheckExistsName(name,type) {
        var f = new FormData();
        f.append("name", name);
        f.append("type", type);
        var q = $.ajax({
            type: "POST",
            url: "@Url.Action("CheckExistsName", "Products")",
            data: f,
            async: false,
            processData: false,
            contentType: false,
            success: function (data) {
                return data;

            }
        }).responseText;
        return q;
                }
       function GetCategory(id) {
        var f = new FormData();
        f.append("id", id);
        var q = $.ajax({
            type: "POST",
            url: "@Url.Action("GetCategory", "Products")",
            data: f,
            async: false,
            processData: false,
            contentType: false,
            success: function (data) {
                return data;

            }
        }).responseText;
        return q;
    }
    function ResetForm() {
        CloseForm();
         $("#ip-name").val("");
        $("#ip-price").val("");
        $("#ip-des").val("");
        $("#ip-code").html("");
        $("#imgViewer").attr("src", null);
        $("#ip-thumbnail").val("");
        $("#ip-qty").val("");
        @{post_office.Controllers.Administrator.ProductsController._id = 0; }

        er = document.getElementsByClassName("_error");
        for (var i = 0; i < er.length; i++) {
            $(er).html("");
        }
        $("#pd-attr").empty();
        $("#add-attr").prop("checked",false);

    }
    $("#add-attr").click(function () {
        ShowAddAttr(this)
    });
    function ShowAddAttr(ele) {
        if ($(ele).prop("checked") == true) {
            $("#pd-attr").append('<div class="attr-child mt-1"> <div class="choose-attr">'
                + '<input type="checkbox" class="color-choose"/>'
                + '<label class="text-color attr-choose">color</label>'
                + '<input type="checkbox" class="length-choose" />'
                + '<label class="text-color attr-choose">length</label>'
                + '<input type="checkbox" class="width-choose"/>'
                + '<label class="text-color attr-choose">width</label>'
                + '<input type="checkbox" class="height-choose" />'
                + '<label class="text-color attr-choose">height</label>'
                + '<span style="float:right; cursor:pointer" class="close-attr">'
                + '<i class="fa fa-window-close close-add-attr"></i> </span>'
                + ' <span class="add-more"><i class="fa fa-plus-circle"></i></span><span class="_error " id="add-attr-error" style="float:left"></span> </div > <div class="render-child p-1">'
                + '</div></div >');
        } else {
            $("#pd-attr").empty();
        }

    }
    function GetListChild(ele,bool) {
        var e = ele.closest(".attr-child").find(".choose-attr");
        if (e.find("input:checked").length == 1&&bool==true) {
            ele.closest(".attr-child").find(".render-child").append('<div class="item-child"></div>')
        }
        return e.find("input:checked").length;

    }
    $('body').delegate(".add-more", "click", function () {
        if (GetListChild($(this), false)==0) {
            ShowMessage(false,"Please choose at least 1 attribute")
        } else {
            var str = $(this).closest(".attr-child").find(".render-child").children(".item-child").first().html();
            $(this).closest(".attr-child").find(".render-child").append('<div class="item-child">'+str+'</div>');
        }
    });
    $('body').delegate(".color-choose", "click", function () {

        AddAttr(this, 1, "color");
    });

    function AddAttr(ele, number, type) {
        if ($(ele).prop("checked") == true) {
            var str = "";
            if (GetListChild($(ele), true) == 1) {
                str = '<input type="text" placeholder="qty" style="width:12%!important" class="input-attr input-form-cu input-qty"/><input type="text" placeholder="price"  class="input-attr input-form-cu input-price"/><span class="subtract"><i class="fa fa-times-circle"></i></span>';
            }

            $(ele).closest(".attr-child").find(".item-child").prepend('<select class="dropdownlist input-attr ip-' + type + '">' + GetListAttribute(number, -1) + '</select>' + str)

        } else {
            $(ele).closest(".attr-child").find(".item-child").find(".ip-"+type).remove();
            GetListChild($(ele)) == 0 ? $(ele).closest(".attr-child").find(".render-child").empty() : true
        }
    }
    function AddAttrUpdate(ls) {
        var str = "";
        var str2 = "";

        for (var i = 0; i < ls.length; i++) {
            if (ls[i].price != null) {
                $(".attr-child").find(".render-child").append('<div class="item-child"></div>')
                str += '<input type="text" placeholder="qty" style="width:12%!important" class="input-attr input-form-cu input-qty" value="' + ls[i].qty + '"/><input type="text" placeholder="price"  class="input-attr input-form-cu input-price" value="' + ls[i].price + '"/><span class="subtract"><i class="fa fa-times-circle"></i></span>'
            }
            str2 += '<select class="dropdownlist input-attr ip-' + ls[i].name + '">' + GetListAttribute(ls[i].number, ls[i].select) + '</select>'
            $(".attr-child").find(".item-child").last().prepend(str2 + str)
            str = str2 = "";
        }


    }

      function GetListAttribute(id, type) {
        var f = new FormData();
          f.append("id", id);
          f.append("type", type);
           var q= $.ajax({
                type: "POST",
                url: "@Url.Action("GetListAttribute", "Products")",
                data: f,
                async: false,
                processData: false,
                contentType: false,
               success: function (data) {
                    return data;

               }
           }).responseText;

        return q;

                };
      function GetAttributeName(id) {
        var f = new FormData();
          f.append("id", id);
           var q= $.ajax({
                type: "POST",
                url: "@Url.Action("GetAttributeName", "Products")",
                data: f,
                async: false,
                processData: false,
                contentType: false,
               success: function (data) {
                    return data;

               }
           }).responseText;

        return q;

    };
                $("#CloseFormDetails").click(function () {
                    $('#view-detail').css("display", "none");
                    $('#content-details').find('div').empty();
                    $(".sidebar").css("pointer-events", "inherit")

                })
    $('body').delegate(".length-choose", "click", function () {
        AddAttr(this, 2, "length")

    });
    $('body').delegate(".width-choose", "click", function () {
        AddAttr(this, 3, "width")

    });
    $('body').delegate(".height-choose", "click", function () {
        AddAttr(this, 4, "height")

    });

    $('body').delegate(".ip-color", "change", function () {
        OpenFormCreateAttr($(this), "color")

    });
    $('body').delegate(".ip-length", "change", function () {
        OpenFormCreateAttr($(this), "length")

    });
    $('body').delegate(".ip-height", "change", function () {
        OpenFormCreateAttr($(this), "height")

    });
    $('body').delegate(".ip-width", "change", function () {
        OpenFormCreateAttr($(this),"width")
    });
    function OpenFormCreateAttr(obj_value, val) {
        if (obj_value.val() == 0) {
            $(".view-create").css("display", "block");
            obj = obj_value;
            attr_type = val;
            $("#select-attr").html(attr_type)
        }
    }
    $('body').delegate(".subtract", "click", function () {
        $(this).closest(".item-child").remove();
        if ($(".attr-child").find('.item-child').length == 0) {
            var e = $(".attr-child").find(".choose-attr input:checked");
            for (var i = 0; i < e.length; i++) {
                $(e[i]).prop("checked", false);
            }
        }
    });
    $("#CloseFormCreate").click(function () {
        CloseFormCreate();

                });
    function CloseFormCreate() {
        $('.view-create').css("display", "none");
        $('#ip-name-attr-create').val("");
        obj.val(-1);
    }
    $(".sub-check").click(function () {

        checkboxes = document.getElementsByClassName('sub-check');
        var k = checkboxes.length;
        for (var i = 0, n = k; i < n; i++) {
            if (checkboxes[i].checked == false) {
                document.getElementById("check-all").checked = false;
                k -= 1;
                break;
            }
        }
        if (k == checkboxes.length) {
            document.getElementById("check-all").checked = true;
        }
    });
</script>
